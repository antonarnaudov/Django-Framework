from rest_framework import serializers
from Api.serializers.category_serializer import SimpleCategorySerializer
from Photos.models.photos_model import Photos


class ShowPhotosSerializer(serializers.ModelSerializer):
    """
    Shows all Public fields for every Photo.
    Uses SimpleCategorySerializer to take only the category name.
    depth = 1 shows all the data 1 relation deeper

    Suitable for getting all public data for the Photos.
    Also for usage in other serializers.
    """
    category = SimpleCategorySerializer()

    class Meta:
        model = Photos
        exclude = ('original_photo',)
        depth = 1


class CreatePhotoSerializer(serializers.ModelSerializer):
    """
    Shows all fields necessary for Photo creation.
    Excludes watermarked_photo because its autogenerated with OpenCv.

    Suitable for creating new photos
    """

    class Meta:
        model = Photos
        exclude = ('watermarked_photo',)


class UpdatePhotoSerializer(serializers.ModelSerializer):
    """
    Shows all fields necessary for Photo Update.
    Makes original_photo field Not required.

    Suitable for editing and updating Photo.
    """

    class Meta:
        model = Photos
        exclude = ('watermarked_photo',)
        extra_kwargs = {'original_photo': {'required': False}}


class SellPhotosSerializer(serializers.ModelSerializer):
    """
    Shows all fields Public & Private.
    Uses SimpleCategorySerializer to take only the category name.
    depth = 1 shows all the data 1 relation deeper

    Suitable for Showing all Photos data after payment.
    """
    category = SimpleCategorySerializer()

    class Meta:
        model = Photos
        fields = '__all__'
        depth = 1


class ShowPhotosForWishesSerializer(serializers.ModelSerializer):
    """
    Shows Public Photos data required for Wishes page.
    """
    class Meta:
        model = Photos
        exclude = ('category', 'original_photo')
